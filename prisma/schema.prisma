generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  username String    @unique
  name     String
  email    String    @unique
  password String
  sessions Session[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MenuItem {
  id       Int        @id @default(autoincrement())
  name     String
  url      String?
  priority Int?
  parentId Int?       @default(0)
  parent   MenuItem?  @relation("SubMenuItems", fields: [parentId], references: [id])
  children MenuItem[] @relation("SubMenuItems")
}

model PortfolioCategory {
  id            Int                 @id @default(autoincrement())
  name          String
  imgUrl        String?
  slug          String              @unique
  priority      Int?
  parentId      Int?
  parent        PortfolioCategory?  @relation("subCategories", fields: [parentId], references: [id])
  subcategories PortfolioCategory[] @relation("subCategories")
  projects      Project[]           @relation("CategoryProjects")
}

model Project {
  id          Int                @id @default(autoincrement())
  title       String
  imageUrl    String?
  categoryId  Int?
  category    PortfolioCategory? @relation("CategoryProjects", fields: [categoryId], references: [id])
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  description String?
}

model Service {
  id         Int       @id @default(autoincrement())
  title      String
  priority   Int?
  serviceUrl String
  parent     Service?  @relation("SubService", fields: [parentId], references: [id])
  parentId   Int?
  children   Service[] @relation("SubService")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogCategory {
  id            Int                 @id @default(autoincrement())
  name          String
  priority      Int?
  parentId      Int?
  parent        BlogCategory?  @relation("subCategories", fields: [parentId], references: [id])
  subcategories BlogCategory[] @relation("subCategories")
  blog      Blog[]           @relation("CategoryBlog")
}

model Blog {
  id          Int                @id @default(autoincrement())
  title       String
  imageUrl    String?
  categoryId  Int?
  category    BlogCategory? @relation("CategoryBlog", fields: [categoryId], references: [id])
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  content String?
}
